<?xml version='1.0' encoding='UTF-8'?>
<SmellBaseline>
  <ManuallySuppressedIssues/>
  <CurrentIssues>
    <ID>ComplexCondition:CollectionExtensions.kt$x &lt; size &amp;&amp; (y == replaceWith.size || (y &lt; replaceWith.size &amp;&amp; !diffCallback.areItemsTheSame(this[x], replaceWith[y])))</ID>
    <ID>ComplexMethod:LiveUiUpdater.kt$LiveUiUpdater$override fun update( message: UIMessage, state: PluginState ): UpdateWith&lt;PluginState, PluginCommand></ID>
    <ID>FunctionOnlyReturningConstant:RenderExtensions.kt$@Suppress("unused") private fun Null.toReadableString(): String</ID>
    <ID>LongParameterList:ArticlesListScreen.kt$( state: LazyListState, id: ScreenId, query: Query, articles: List&lt;Article>, cause: Throwable, onMessage: (Message) -> Unit, )</ID>
    <ID>LongParameterList:Component.kt$( id: ComponentId, noinline initializer: Initializer&lt;S, C>, noinline resolver: Resolver&lt;C, M>, noinline updater: Updater&lt;M, S, C>, jsonConverter: JsonConverter&lt;J>, // todo: group to reduce number of arguments scope: CoroutineScope, url: URL = Localhost, io: CoroutineDispatcher = Dispatchers.IO, computation: CoroutineDispatcher = Dispatchers.Unconfined, shareOptions: ShareOptions = ShareStateWhileSubscribed, noinline sessionBuilder: SessionBuilder&lt;M, S, J> = ::WebSocketSession )</ID>
    <ID>MagicNumber:Balloon.kt$15</ID>
    <ID>MagicNumber:Balloon.kt$15_000L</ID>
    <ID>MagicNumber:Balloon.kt$30</ID>
    <ID>MagicNumber:Colors.kt$0x33412E</ID>
    <ID>MagicNumber:Colors.kt$0x704745</ID>
    <ID>MagicNumber:Colors.kt$0xbaeeba</ID>
    <ID>MagicNumber:Colors.kt$0xffcccc</ID>
    <ID>MagicNumber:Colors.kt$182</ID>
    <ID>MagicNumber:Networking.kt$3</ID>
    <ID>MagicNumber:ServerImpl.kt$10</ID>
    <ID>MagicNumber:ServerImpl.kt$5</ID>
    <ID>MatchingDeclarationName:Component.kt$ComponentId</ID>
    <ID>MatchingDeclarationName:HomeScreen.kt$BottomMenuItem</ID>
    <ID>MatchingDeclarationName:MapSerializer.kt$MapDeserializer : JsonDeserializer</ID>
    <ID>MatchingDeclarationName:Memoization.kt$Key7</ID>
    <ID>MatchingDeclarationName:MongoDb.kt$HasMongoCollection</ID>
    <ID>MatchingDeclarationName:PersistentSerializer.kt$PersistentListSerializer : JsonSerializerJsonDeserializer</ID>
    <ID>MatchingDeclarationName:UpdateUI.kt$UiUpdater</ID>
    <ID>MaxLineLength:CollectionExtensionsTest.kt$CollectionExtensionsTest$val input = mutableListOf(263, 110, 109, 156, 158, 161, 166, 170, 176, 186, 150, 189, 194, 197, 199, 204, 176, 186, 150, 189, 194, 197, 199, 204)</ID>
    <ID>MaxLineLength:FiltersTest.kt$FiltersTest$fun</ID>
    <ID>MaxLineLength:LiveArticlesUpdater.kt$LiveArticlesUpdater$is LoadArticlesFromScratch, is RefreshArticles -> state.toRefreshing() command LoadArticlesByQuery(state.id, state.query, state.articles.size, ArticlesState.ArticlesPerPage)</ID>
    <ID>NewLineAtEndOfFile:AppResolver.kt$com.max.reader.app.resolve.AppResolver.kt</ID>
    <ID>NewLineAtEndOfFile:AppUpdater.kt$com.max.reader.app.update.AppUpdater.kt</ID>
    <ID>NewLineAtEndOfFile:Baloon.kt$com.oliynick.max.tea.core.debug.app.component.resolver.Baloon.kt</ID>
    <ID>NewLineAtEndOfFile:ChooserUtils.kt$com.oliynick.max.tea.core.debug.app.presentation.misc.ChooserUtils.kt</ID>
    <ID>NewLineAtEndOfFile:ClientMessageSerializationTest.kt$com.oliynick.max.tea.core.debug.app.domain.serialization.ClientMessageSerializationTest.kt</ID>
    <ID>NewLineAtEndOfFile:CollectionExt.kt$.CollectionExt.kt</ID>
    <ID>NewLineAtEndOfFile:CollectionExtensionsTest.kt$com.oliynick.max.tea.core.debug.app.misc.CollectionExtensionsTest.kt</ID>
    <ID>NewLineAtEndOfFile:ComponentExtensions.kt$com.oliynick.max.tea.core.debug.app.presentation.misc.ComponentExtensions.kt</ID>
    <ID>NewLineAtEndOfFile:ComponentLogic.kt$core.component.ComponentLogic.kt</ID>
    <ID>NewLineAtEndOfFile:ComponentTest.kt$com.oliynick.max.tea.core.debug.app.domain.component.ComponentTest.kt</ID>
    <ID>NewLineAtEndOfFile:ComponentTestSuite.kt$com.oliynick.max.tea.core.component.ComponentTestSuite.kt</ID>
    <ID>NewLineAtEndOfFile:Data.kt$com.oliynick.max.tea.core.debug.app.misc.Data.kt</ID>
    <ID>NewLineAtEndOfFile:DebugSession.kt$com.oliynick.max.tea.core.debug.session.DebugSession.kt</ID>
    <ID>NewLineAtEndOfFile:DebugWebSocketSession.kt$com.oliynick.max.tea.core.debug.session.DebugWebSocketSession.kt</ID>
    <ID>NewLineAtEndOfFile:DiffingListModel.kt$com.oliynick.max.tea.core.debug.app.presentation.misc.DiffingListModel.kt</ID>
    <ID>NewLineAtEndOfFile:Environment.kt$com.max.reader.app.env.Environment.kt</ID>
    <ID>NewLineAtEndOfFile:FiltersTest.kt$com.oliynick.max.tea.core.debug.app.domain.cms.FiltersTest.kt</ID>
    <ID>NewLineAtEndOfFile:FlowExtension.kt$com.oliynick.max.tea.core.debug.component.internal.FlowExtension.kt</ID>
    <ID>NewLineAtEndOfFile:FlowExtensions.kt$com.max.reader.misc.FlowExtensions.kt</ID>
    <ID>NewLineAtEndOfFile:Generator.kt$com.oliynick.max.tea.core.debug.app.misc.Generator.kt</ID>
    <ID>NewLineAtEndOfFile:GsonAdapters.kt$com.oliynick.max.tea.core.debug.gson.GsonAdapters.kt</ID>
    <ID>NewLineAtEndOfFile:GsonConverter.kt$com.oliynick.max.tea.core.debug.gson.GsonConverter.kt</ID>
    <ID>NewLineAtEndOfFile:HasMessageChannel.kt$com.oliynick.max.tea.core.debug.app.component.resolver.HasMessageChannel.kt</ID>
    <ID>NewLineAtEndOfFile:HasSystemProperties.kt$com.oliynick.max.tea.core.debug.app.component.resolver.HasSystemProperties.kt</ID>
    <ID>NewLineAtEndOfFile:JLabelExtensions.kt$com.oliynick.max.tea.core.debug.app.presentation.misc.JLabelExtensions.kt</ID>
    <ID>NewLineAtEndOfFile:JavaVersionExt.kt$.JavaVersionExt.kt</ID>
    <ID>NewLineAtEndOfFile:LRUCacheTest.kt$com.oliynick.max.tea.core.debug.app.domain.LRUCacheTest.kt</ID>
    <ID>NewLineAtEndOfFile:LiveNotificationUpdaterTest.kt$com.oliynick.max.tea.core.debug.app.component.updater.LiveNotificationUpdaterTest.kt</ID>
    <ID>NewLineAtEndOfFile:LiveUpdater.kt$com.oliynick.max.tea.core.debug.app.component.updater.LiveUpdater.kt</ID>
    <ID>NewLineAtEndOfFile:LruCache.kt$com.oliynick.max.tea.core.debug.app.misc.LruCache.kt</ID>
    <ID>NewLineAtEndOfFile:MainActivity.kt$com.max.reader.screens.main.MainActivity.kt</ID>
    <ID>NewLineAtEndOfFile:MongoDb.kt$com.max.reader.app.env.storage.local.MongoDb.kt</ID>
    <ID>NewLineAtEndOfFile:Networking.kt$com.max.reader.app.env.Networking.kt</ID>
    <ID>NewLineAtEndOfFile:NewsApi.kt$com.max.reader.app.env.storage.network.NewsApi.kt</ID>
    <ID>NewLineAtEndOfFile:NumberExtensions.kt$com.oliynick.max.tea.core.debug.app.misc.NumberExtensions.kt</ID>
    <ID>NewLineAtEndOfFile:PluginDependenciesSpecExt.kt$.PluginDependenciesSpecExt.kt</ID>
    <ID>NewLineAtEndOfFile:PluginException.kt$com.oliynick.max.tea.core.debug.app.component.cms.PluginException.kt</ID>
    <ID>NewLineAtEndOfFile:PluginMessage.kt$com.oliynick.max.tea.core.debug.app.component.cms.PluginMessage.kt</ID>
    <ID>NewLineAtEndOfFile:PluginState.kt$com.oliynick.max.tea.core.debug.app.component.cms.PluginState.kt</ID>
    <ID>NewLineAtEndOfFile:PluginState.kt$com.oliynick.max.tea.core.debug.app.domain.PluginState.kt</ID>
    <ID>NewLineAtEndOfFile:Poly.kt$com.oliynick.max.tea.core.debug.gson.serialization.data.Poly.kt</ID>
    <ID>NewLineAtEndOfFile:RefDiffer.kt$com.oliynick.max.tea.core.debug.app.presentation.misc.RefDiffer.kt</ID>
    <ID>NewLineAtEndOfFile:Settings.kt$com.oliynick.max.tea.core.debug.app.domain.Settings.kt</ID>
    <ID>NewLineAtEndOfFile:SideToolWindowFactory.kt$com.oliynick.max.tea.core.debug.app.presentation.sidebar.SideToolWindowFactory.kt</ID>
    <ID>NewLineAtEndOfFile:SnapshotTreeModel.kt$com.oliynick.max.tea.core.debug.app.presentation.component.SnapshotTreeModel.kt</ID>
    <ID>NewLineAtEndOfFile:Storage.kt$com.max.reader.app.env.storage.Storage.kt</ID>
    <ID>NewLineAtEndOfFile:TestDebugSession.kt$com.oliynick.max.tea.core.debug.misc.TestDebugSession.kt</ID>
    <ID>NewLineAtEndOfFile:Typography.kt$com.max.reader.ui.theme.Typography.kt</ID>
    <ID>NewLineAtEndOfFile:Url.kt$com.oliynick.max.tea.core.debug.component.Url.kt</ID>
    <ID>NewLineAtEndOfFile:build.gradle.kts$.build.gradle.kts</ID>
    <ID>SpreadOperator:BasicComponentTest.kt$BasicComponentTest$(*messages)</ID>
    <ID>SpreadOperator:ComponentLogic.kt$TodoState$(*items)</ID>
    <ID>TooGenericExceptionCaught:ServerImpl.kt$e: Throwable</ID>
    <ID>UndocumentedPublicClass:ClientMessage.kt$ApplyMessage&lt;out J> : ClientMessage</ID>
    <ID>UndocumentedPublicClass:ClientMessage.kt$ApplyState&lt;J> : ClientMessage</ID>
    <ID>UndocumentedPublicClass:ClientMessage.kt$ClientMessage&lt;out J></ID>
    <ID>UndocumentedPublicClass:Component.kt$ComponentId</ID>
    <ID>UndocumentedPublicClass:Environment.kt$ShareOptions</ID>
    <ID>UndocumentedPublicClass:Packets.kt$NotifyClient&lt;out J></ID>
    <ID>UndocumentedPublicClass:Packets.kt$NotifyServer&lt;out J></ID>
    <ID>UndocumentedPublicClass:ServerMessage.kt$NotifyComponentAttached&lt;out J> : ServerMessage</ID>
    <ID>UndocumentedPublicClass:ServerMessage.kt$NotifyComponentSnapshot&lt;out J> : ServerMessage</ID>
    <ID>UndocumentedPublicClass:ServerMessage.kt$ServerMessage&lt;out J></ID>
    <ID>UndocumentedPublicFunction:Component.kt$@UnstableApi fun &lt;M, S, C> Env&lt;M, S, C>.compute( input: Flow&lt;M>, startFrom: Initial&lt;S, C>, sink: Sink&lt;M>, ): Flow&lt;Snapshot&lt;M, S, C>></ID>
    <ID>UndocumentedPublicFunction:Component.kt$@UnstableApi fun &lt;M, S, C> Env&lt;M, S, C>.resolveAsFlow( commands: Collection&lt;C>, ): Flow&lt;M></ID>
    <ID>UndocumentedPublicFunction:Component.kt$@UnstableApi fun &lt;M, S, C> Env&lt;M, S, C>.upstream( snapshots: Flow&lt;Initial&lt;S, C>>, sink: Sink&lt;M>, input: (Initial&lt;S, C>) -> Flow&lt;M>, ): Flow&lt;Snapshot&lt;M, S, C>></ID>
    <ID>UndocumentedPublicFunction:Component.kt$@UnstableApi fun &lt;M, S, C> Flow&lt;Snapshot&lt;M, S, C>>.downstream( input: Flow&lt;M>, upstreamInput: SendChannel&lt;M>, ): Flow&lt;Snapshot&lt;M, S, C>></ID>
    <ID>UndocumentedPublicFunction:Component.kt$@UnstableApi fun &lt;S, C> Env&lt;*, S, C>.init(): Flow&lt;Initial&lt;S, C>></ID>
    <ID>UndocumentedPublicFunction:Component.kt$@UnstableApi fun &lt;T> Flow&lt;T>.shareIn( scope: CoroutineScope, shareOptions: ShareOptions, )</ID>
    <ID>UndocumentedPublicFunction:FlowExtensions.kt$@UnstableApi suspend fun &lt;T> Flow&lt;T>.into( sendChannel: SendChannel&lt;T> )</ID>
    <ID>UndocumentedPublicFunction:FlowExtensions.kt$fun &lt;T> Flow&lt;T>.mergeWith(other: Flow&lt;T>): Flow&lt;T></ID>
    <ID>UndocumentedPublicProperty:ClientMessage.kt$ApplyMessage$val message: J</ID>
    <ID>UndocumentedPublicProperty:ClientMessage.kt$ApplyState$val state: J</ID>
    <ID>UndocumentedPublicProperty:Component.kt$ComponentId$val value: String</ID>
    <ID>UndocumentedPublicProperty:Environment.kt$@UnstableApi val ShareStateWhileSubscribed = ShareOptions(SharingStarted.WhileSubscribed(), 1U)</ID>
    <ID>UndocumentedPublicProperty:Environment.kt$Env$val scope: CoroutineScope</ID>
    <ID>UndocumentedPublicProperty:Environment.kt$Env$val shareOptions: ShareOptions = ShareStateWhileSubscribed</ID>
    <ID>UndocumentedPublicProperty:Environment.kt$ShareOptions$val replay: UInt</ID>
    <ID>UndocumentedPublicProperty:Environment.kt$ShareOptions$val started: SharingStarted</ID>
    <ID>UndocumentedPublicProperty:Packets.kt$NotifyClient$val component: ComponentId</ID>
    <ID>UndocumentedPublicProperty:Packets.kt$NotifyClient$val id: UUID</ID>
    <ID>UndocumentedPublicProperty:Packets.kt$NotifyClient$val message: ClientMessage&lt;J></ID>
    <ID>UndocumentedPublicProperty:Packets.kt$NotifyServer$val componentId: ComponentId</ID>
    <ID>UndocumentedPublicProperty:Packets.kt$NotifyServer$val messageId: UUID</ID>
    <ID>UndocumentedPublicProperty:Packets.kt$NotifyServer$val payload: ServerMessage&lt;J></ID>
    <ID>UndocumentedPublicProperty:ServerMessage.kt$NotifyComponentAttached$val state: J</ID>
    <ID>UndocumentedPublicProperty:ServerMessage.kt$NotifyComponentSnapshot$val message: J</ID>
    <ID>UndocumentedPublicProperty:ServerMessage.kt$NotifyComponentSnapshot$val newState: J</ID>
    <ID>UndocumentedPublicProperty:ServerMessage.kt$NotifyComponentSnapshot$val oldState: J</ID>
    <ID>UndocumentedPublicProperty:Snapshot.kt$Regular$/** * Message that triggered state update */ val message: M</ID>
    <ID>UndocumentedPublicProperty:Snapshot.kt$Regular$/** * Previous state of a component */ val previousState: S</ID>
    <ID>UnnecessaryAbstractClass:AppState.kt$ScreenState</ID>
    <ID>UnnecessaryAbstractClass:BasicComponentTest.kt$BasicComponentTest</ID>
  </CurrentIssues>
</SmellBaseline>