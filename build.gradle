/*
 * Copyright (C) 2019 Maksym Oliinyk.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {

    ext {
        kotlin_version = '1.3.50'
        ktor_version = "1.2.4"
        coroutines_version = '1.3.0'
    }

    repositories {
        mavenLocal()
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'https://kotlin.bintray.com/ktor' }
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }

    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.5.2'
        classpath 'org.jetbrains.kotlin:kotlin-gradle-plugin:1.3.60'
        classpath "com.github.dcendents:android-maven-gradle-plugin:1.4.1"
        classpath 'com.vanniktech:gradle-android-junit-jacoco-plugin:0.15.0'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

//apply plugin: 'idea'
apply plugin: "com.vanniktech.android.junit.jacoco"

/*idea.module {
    excludeDirs += file('$projectDir/androidx_prebuilts')
}*/

allprojects {
    repositories {
        mavenLocal()
        google()
        jcenter()
        maven { url 'https://dl.bintray.com/kotlin/kotlin-eap' }

    }

}

task clean(type: Delete) {
    delete rootProject.buildDir
}

project.afterEvaluate {

    allprojects { project ->

        project.tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
            kotlinOptions {
                // will disable warning about usage of experimental Kotlin features
                freeCompilerArgs = [
                        '-Xuse-experimental=kotlin.ExperimentalUnsignedTypes',
                        '-Xuse-experimental=kotlin.Experimental',
                        '-Xuse-experimental=kotlinx.coroutines.FlowPreview',
                        '-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi',
                        '-Xuse-experimental=io.ktor.util.KtorExperimentalAPI',
                        '-XXLanguage:+NewInference',
                        '-XXLanguage:+InlineClasses'
                ]
            }
        }
    }
}