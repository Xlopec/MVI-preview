// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {

    ext {
        kotlin_version = '1.3.50'
        playServices = "17.0.0"
        navigation = "2.2.0-alpha03"
        lifecycle = '1.1.1'
        ktor_version = "1.2.4"
        coroutines_version = '1.3.0'
    }

    repositories {
        mavenLocal()
        google()
        jcenter()
        maven { url 'https://jitpack.io' }
        maven { url "https://plugins.gradle.org/m2/" }
        maven { url 'https://kotlin.bintray.com/ktor' }
    }
    dependencies {
        classpath "com.android.tools.build:gradle:3.5.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "androidx.navigation:navigation-safe-args-gradle-plugin:$navigation"
        classpath "com.github.dcendents:android-maven-gradle-plugin:1.4.1"
        classpath 'com.vanniktech:gradle-android-junit-jacoco-plugin:0.15.0'
        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

apply plugin: 'idea'
apply plugin: "com.vanniktech.android.junit.jacoco"

idea.module {
    excludeDirs += file('$projectDir/androidx_prebuilts')
}

allprojects {
    repositories {
        mavenLocal()
        google()
        jcenter()

    }

}

task clean(type: Delete) {
    delete rootProject.buildDir
}

project.afterEvaluate {

    allprojects { project ->

        project.tasks.withType(org.jetbrains.kotlin.gradle.tasks.KotlinCompile).all {
            kotlinOptions {
                // will disable warning about usage of experimental Kotlin features
                freeCompilerArgs = [
                        '-Xuse-experimental=kotlin.ExperimentalUnsignedTypes',
                        '-Xuse-experimental=kotlin.Experimental',
                        '-Xuse-experimental=kotlinx.coroutines.FlowPreview',
                        '-Xuse-experimental=kotlinx.coroutines.ExperimentalCoroutinesApi',
                        '-Xuse-experimental=io.ktor.util.KtorExperimentalAPI',
                        '-XXLanguage:+NewInference'
                ]
            }
        }
    }
}